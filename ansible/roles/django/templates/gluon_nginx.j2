upstream {{ project_name }} {
    server {{ ansible_eth0.ipv4.address }}:8000 fail_timeout=5;
}


server {
    server_name  www.{{ domain_name }};
    return 301 $scheme://{{ domain_name }}$request_uri;
}

server {
    server_name {{ domain_name }};
    root /data/www/{{ project_name }}/;

    location /robots.txt {
      access_log      off;
      log_not_found   off;
      }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        if (!-f $request_filename) {
            proxy_pass http://{{ project_name }};
            break;
        }
    }
    # managed by Certbot

   listen 443 ssl; # managed by Certbot
   ssl_certificate /etc/letsencrypt/live/dapprank.com/fullchain.pem; # managed by Certbot
   ssl_certificate_key /etc/letsencrypt/live/dapprank.com/privkey.pem; # managed by Certbot
   include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


server {
    server_name api.{{ domain_name }};
    add_header 'Access-Control-Allow-Origin' "https://dapprank.com";
    add_header 'Access-Control-Allow-Methods' "GET, POST, PUT, PATCH, OPTIONS, DELETE, HEAD";
    add_header 'Access-Control-Allow-Headers' "Authorization, Content-Type, X-CSRFToken";
    add_header 'Access-Control-Allow-Credentials' "true";
    root /data/www/{{ project_name }}/;

    location /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        if (!-f $request_filename) {
            proxy_pass http://{{ project_name }};
            break;
        }
    }

# managed by Certbot

   listen 443 ssl; # managed by Certbot
   ssl_certificate /etc/letsencrypt/live/api.dapprank.com/fullchain.pem; # managed by Certbot
   ssl_certificate_key /etc/letsencrypt/live/api.dapprank.com/privkey.pem; # managed by Certbot
   include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    server_name static.{{ domain_name }};
    access_log off;
    log_not_found off;

    root /data/www/static;
    location /static/ {
      alias /data/www/static/;
      expires max;
    }
 # managed by Certbot

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/static.dapprank.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/static.dapprank.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = api.dapprank.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name api.dapprank.com;
    listen 80;
    return 404; # managed by Certbot

}

server {
    if ($host = static.dapprank.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name static.dapprank.com;
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = dapprank.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name dapprank.com;
    listen 80;
    return 404; # managed by Certbot

}
